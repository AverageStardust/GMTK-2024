{
	"TIC-80 print": {
		"scope": "javascript",
		"prefix": "print",
		"body": [
			"print(\"${1:text}\"${2:,${3:x},${4:y},${5:color}${6:,${7:fixed},${8:scale}}})",
			"$0"
		],
		"description": "Print string with system font TIC-80"
	},
	"TIC-80 clip": {
		"scope": "javascript",
		"prefix": "clip",
		"body": [
			"clip(${1:${2:x},${3:y},${4:width},${5:height}})",
			"$0"
		],
		"description": "Set screen clipping region TIC-80"
	},
	"TIC-80 cls": {
		"scope": "javascript",
		"prefix": "cls",
		"body": [
			"cls(${1:color})",
			"$0"
		],
		"description": "Clear the screen TIC-80"
	},
	"TIC-80 pix": {
		"scope": "javascript",
		"prefix": "pix",
		"body": [
			"pix(${1:x},${2:y},${3:color})",
			"$0"
		],
		"description": "Set/Get pixel color on the screen TIC-80"
	},
	"TIC-80 line": {
		"scope": "javascript",
		"prefix": "line",
		"body": [
			"line(${1:start_x},${2:start_y},${3:end_x},${4:end_y},${5:color})",
			"$0"
		],
		"description": "Draw line TIC-80"
	},
	"TIC-80 rect": {
		"scope": "javascript",
		"prefix": "rect",
		"body": [
			"rect(${1:x},${2:y},${3:width},${4:height},${5:color})",
			"$0"
		],
		"description": "Draw filled rectangle TIC-80"
	},
	"TIC-80 rectb": {
		"scope": "javascript",
		"prefix": "rect",
		"body": [
			"rectb(${1:x},${2:y},${3:width},${4:height},${5:color})",
			"$0"
		],
		"description": "Draw rectangle border TIC-80"
	},
	"TIC-80 circ": {
		"scope": "javascript",
		"prefix": "circ",
		"body": [
			"circ(${1:x},${2:y},${3:radius},${4:color})",
			"$0"
		],
		"description": "Filled circle TIC-80"
	},
	"TIC-80 circb": {
		"scope": "javascript",
		"prefix": "circb",
		"body": [
			"circb(${1:x},${2:y},${3:radius},${4:color})",
			"$0"
		],
		"description": "Draw filled circle TIC-80"
	},
	"TIC-80 spr": {
		"scope": "javascript",
		"prefix": "spr",
		"body": [
			"spr(${1:id},${2:x},${3:y}${4:,${5:colorkey},${6:scale},${7:flip},${8:rotate},${9:width,height}})",
			"$0"
		],
		"description": "Draw sprite by ID, can rotate or flip TIC-80"
	},
	"TIC-80 btn": {
		"scope": "javascript",
		"prefix": "btn",
		"body": [
			"btn(${1:id})"
		],
		"description": "Get gamepad button state in current frame TIC-80"
	},
	"TIC-80 btnp": {
		"scope": "javascript",
		"prefix": "btnp",
		"body": [
			"btnp(${1:id}, ${2:hold}, ${3:period})"
		],
		"description": "Get gamepad button state according to previous frame TIC-80"
	},
	"TIC-80 elli": {
		"scope": "javascript",
		"prefix": "elli",
		"body": [
			"elli(${1:x},${2:y},${3:a},${4:b},${5:color})",
			"$0"
		],
		"description": "Filled circle TIC-80"
	},
	"TIC-80 ellib": {
		"scope": "javascript",
		"prefix": "ellib",
		"body": [
			"ellib(${1:x},${2:y},${3:a},${4:b},${5:color})",
			"$0"
		],
		"description": "Draw filled circle TIC-80"
	},
	"TIC-80 exit": {
		"scope": "javascript",
		"prefix": "exit",
		"body": [
			"exit()",
			"$0"
		],
		"description": "Draw filled circle TIC-80"
	},
	"TIC-80 fget": {
		"scope": "javascript",
		"prefix": "fget",
		"body": [
			"fget(${1:sprite_id},${2:flag})",
			"$0"
		],
		"description": "Draw filled circle TIC-80"
	},
	"TIC-80 fset": {
		"scope": "javascript",
		"prefix": "fset",
		"body": [
			"fset(${1:sprite_id},${2:flag},${3:bool})",
			"$0"
		],
		"description": "Draw filled circle TIC-80"
	},
	"TIC-80 sfx": {
		"scope": "javascript",
		"prefix": "sfx",
		"body": [
			"sfx(${1:id}${2:,${3:note},${4:duration},${5:channel},${6:volume},${7:speed}})"
		],
		"description": "Play SFX by ID on specific channel TIC-80"
	},
	"TIC-80 map": {
		"scope": "javascript",
		"prefix": "map",
		"body": [
			"map(${1:cellx},${2:celly},${3:cellwidth},${4:cellheight},${5:screenx},${6:screeny}${7:,${8:colorkey},${9:scale},${10:remap}})",
			"$0"
		],
		"description": "Draw map region on the screen TIC-80"
	},
	"TIC-80 mget": {
		"scope": "javascript",
		"prefix": "mget",
		"body": [
			"mget(${1:cellx},${2:celly})"
		],
		"description": "Get map tile index TIC-80"
	},
	"TIC-80 mset": {
		"scope": "javascript",
		"prefix": "mset",
		"body": [
			"mset(${1:cellx},${2:celly},${3:id})",
			"$0"
		],
		"description": "Set map tile index TIC-80"
	},
	"TIC-80 music": {
		"scope": "javascript",
		"prefix": "music",
		"body": [
			"music(${1:id}, ${2:frame}, ${3:row}, ${4:loop}, ${5:sustain}, ${6:tempo}, ${7:speed})",
			"$0"
		],
		"description": "Play music track by ID TIC-80"
	},
	"TIC-80 peek": {
		"scope": "javascript",
		"prefix": "peek",
		"body": [
			"peek(${1:address})",
			"$0"
		],
		"description": "Read a byte value from RAM TIC-80"
	},
	"TIC-80 poke": {
		"scope": "javascript",
		"prefix": "poke",
		"body": [
			"poke(${1:address},${2:value})",
			"$0"
		],
		"description": "Write a byte value to RAM TIC-80"
	},
	"TIC-80 peek4": {
		"scope": "javascript",
		"prefix": "peek4",
		"body": [
			"peek4(${1:address})",
			"$0"
		],
		"description": "Read a half byte value from RAM TIC-80"
	},
	"TIC-80 poke4": {
		"scope": "javascript",
		"prefix": "poke4",
		"body": [
			"poke4(${1:address},${2:value})",
			"$0"
		],
		"description": "Write a half byte value to RAM TIC-80"
	},
	"TIC-80 memcpy": {
		"scope": "javascript",
		"prefix": "memcpy",
		"body": [
			"memcpy(${1:toaddress},${2:fromadress},${3:length})",
			"$0"
		],
		"description": "!Copy bytes in RAM TIC-80"
	},
	"TIC-80 memset": {
		"scope": "javascript",
		"prefix": "memset",
		"body": [
			"memset(${1:address},${2:value},${3:length})",
			"$0"
		],
		"description": "!Set byte values in RAM TIC-80"
	},
	"TIC-80 pmem": {
		"scope": "javascript",
		"prefix": "pmem",
		"body": [
			"pmem(${1:index},${2:value})",
			"$0"
		],
		"description": "Save integer value to persistent memory TIC-80"
	},
	"TIC-80 trace": {
		"scope": "javascript",
		"prefix": "trace",
		"body": [
			"trace(${1:text},${2:color})",
			"$0"
		],
		"description": "Trace string to the Console TIC-80"
	},
	"TIC-80 time": {
		"scope": "javascript",
		"prefix": "time",
		"body": [
			"time()"
		],
		"description": "Returns how many ticks passed from game started TIC-80"
	},
	"TIC-80 tstamp": {
		"scope": "javascript",
		"prefix": "tstamp",
		"body": [
			"tstamp()"
		],
		"description": "Returns how many ticks passed from game started TIC-80"
	},
	"TIC-80 mouse": {
		"scope": "javascript",
		"prefix": "mouse",
		"body": [
			"let [${1:x},${2:y},${3:left},${4:middle},${5:right},${6:scrollX},${7:scrollY}] = mouse()",
			"$0"
		],
		"description": "Get XY and press state of mouse/touch TIC-80"
	},
	"TIC-80 tri": {
		"scope": "javascript",
		"prefix": "tri",
		"body": [
			"tri(${1:x1},${2:y1},${3:x2},${4:y2},${5:x3},${6:y3},${7:color})",
			"$0"
		],
		"description": "Draw filled triangle TIC-80"
	},
	"TIC-80 trib": {
		"scope": "javascript",
		"prefix": "trib",
		"body": [
			"trib(${1:x1},${2:y1},${3:x2},${4:y2},${5:x3},${6:y3},${7:color})",
			"$0"
		],
		"description": "Draw filled triangle TIC-80"
	},
	// Special functions
	"TIC-80 TIC": {
		"scope": "javascript",
		"prefix": "tic",
		"body": [
			"function TIC() {",
			"\t$0",
			"}"
		],
		"description": "Main update function TIC-80"
	},
	"TIC-80 scanline": {
		"scope": "javascript",
		"prefix": "bdr",
		"body": [
			"function BDR(row) {",
			"\t$0",
			"}"
		],
		"description": "Line update function TIC-80"
	},
	"TIC-80 init": {
		"scope": "javascript",
		"prefix": "boot",
		"body": [
			"function BOOT() {",
			"\t$0",
			"}"
		],
		"description": "Init function TIC-80"
	},
	"TIC-80 menu": {
		"scope": "javascript",
		"prefix": "menu",
		"body": [
			"function MENU(menuIndex) {",
			"\t$0",
			"}"
		],
		"description": "Init function TIC-80"
	},
}